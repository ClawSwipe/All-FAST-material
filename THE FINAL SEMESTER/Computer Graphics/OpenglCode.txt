#include<windows.h>
#include<Glut.h>
void MyInit(void)
{
	glClearColor(0.0, 0.0, 0.0, 0.0); //Set the background color
	glColor4f(1.0, 1.0, 0.0, 1.0); //set the color
	glPointSize(10.0);
	glShadeModel(GL_FLAT);
	glMatrixMode(GL_PROJECTION);//projection matrix before drawing the objects in your scene to set the view volume.
	gluOrtho2D(0.0, 640.0, 0.0, 480.0);  // define a 2D orthographic projection matrix Left,right,bottom,top)
}
void MyDisplay()
{
	glClear(GL_COLOR_BUFFER_BIT);//Clear the buffer
	glBegin(GL_TRIANGLE_STRIP);
	glColor3f(1.0, 0.0, 0.0); // Red
	glVertex2f(260, 260); // V1
	glColor3f(0.0, 1.0, 0.0); // Green
	glVertex2f(300, 260);  // V2
	glColor3f(0.0, 0.0, 1.0); // Blue
	glVertex2f(260, 300);  // V3
	glColor3f(1.0, 1.0, 0.0); // Yellow
	glVertex2f(300, 300);   // V4

	glColor3f(1.0, 0.0, 1.0); // Magenta
	glVertex2f(260, 320);  // V5
	glEnd();
	glBegin(GL_TRIANGLES);
		glColor4f(1.0, 0.0, 1.0,4.0); // Magenta
		glVertex2d(330, 320);  // V5
		glVertex2d(400, 460);
		glVertex2d(200,500);
	glEnd();

	glBegin(GL_POINTS);
		glColor3f(1.0, 0.5, 0.2);
		glVertex3d(400.0, 250.0, 0.0);
		glEnd();


	glFlush(); //force execution of GL commands in finite time
}

int main(int argc, char** argv)
{
	glutInit(&argc, argv); //OPengl toolkit to invoke
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGBA);
	glutInitWindowSize(640, 480);
	glutInitWindowPosition(100, 150);
	glutCreateWindow("point");
	glutDisplayFunc(MyDisplay);
	MyInit();
	glutMainLoop();
}
